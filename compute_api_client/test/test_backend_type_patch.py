# coding: utf-8

"""
    Quantum Inspire 2

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from compute_api_client.models.backend_type_patch import BackendTypePatch

class TestBackendTypePatch(unittest.TestCase):
    """BackendTypePatch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackendTypePatch:
        """Test BackendTypePatch
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackendTypePatch`
        """
        model = BackendTypePatch()
        if include_optional:
            return BackendTypePatch(
                name = '',
                infrastructure = '',
                description = '',
                image_id = '',
                is_hardware = True,
                supports_raw_data = True,
                features = [
                    ''
                    ],
                default_compiler_config = { },
                gateset = [
                    ''
                    ],
                topology = [
                    [
                        56
                        ]
                    ],
                nqubits = 56,
                default_number_of_shots = 56,
                max_number_of_shots = 56,
                enabled = True
            )
        else:
            return BackendTypePatch(
        )
        """

    def testBackendTypePatch(self):
        """Test BackendTypePatch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
